#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  (load #p"./cl-waffe2.asd")
  #+quicklisp(ql:quickload '(:cl-waffe2 :cl-waffe2/docs) :silent t)
  )

(defpackage :ros.script.cl-waffe2-test.3893644947
  (:use :cl))
(in-package :ros.script.cl-waffe2-test.3893644947)

;; delete it in the future.
#+sbcl(declaim (sb-ext:muffle-conditions cl:style-warning))
(defun main (&rest argv)
  (cond
    ((equal (car argv) "gendoc")
     (cl-waffe2.docs:generate))
    (T
     ;; Calling all tests depending on *force-use-build*
     (let ((cl-waffe2/vm.generic-tensor::*force-use-build* nil))
       (format t "[INFO] Testing under *force-use-build* = t (i.e.: the function vm-build is replaced with build")
       (asdf:test-system :cl-waffe2))
     
     (format t "[INFO] Testing under *force-use-build* = nil (i.e.: vm-build is available)")
     (let ((cl-waffe2/vm.generic-tensor::*force-use-build* nil))
       (asdf:test-system :cl-waffe2)))))
;;; vim: set ft=lisp lisp:
